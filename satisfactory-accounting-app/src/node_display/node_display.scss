@use "sass:color";
@use "../colors.scss";

@use "balance/NodeBalance.scss";
@use "building/building.scss";
@use "inputs/inputs.scss";

.NodeDisplay {
    .drag-handle {
        display: flex;
        color: colors.$gray-dark;
        cursor: move;
    }

    .delete {
        @include colors.red-button();
    }

    .copy {
        @include colors.green-button;
    }

    .expand-collapse {
        @include colors.primary-button;
    }

    .icon {
        width: 24px;
        height: 24px;
        object-fit: contain;
    }

    input[type="text"] {
        background-color: colors.$white;
        border: none;
        outline: none;
    }


    &.group {
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: stretch;

        border-radius: 5px;

        background-color: colors.$light;

        .header {
            box-sizing: border-box;

            display: flex;
            flex-direction: row;
            justify-content: flex-start;
            align-items: center;
            padding: 5px;
            min-height: 40px;
            gap: 5px;

       }

        .summary {
            box-sizing: border-box;

            display: flex;
            flex-direction: row;
            justify-content: flex-start;
            align-items: center;
            padding: 5px;
            gap: 5px;

       }

        .GroupName {
            flex-grow: 1;

            .value {
                font-size: 20px;
                color: colors.$gray-dark;
            }
            &.unnamed span.value {
                color: colors.$gray;
            }
        }

        .body {
            box-sizing: border-box;

            display: flex;
            justify-content: space-between;
            flex-direction: row;
            align-items: flex-start;
            margin: 0 5px;
            background-color: colors.$dark;
            border-radius: 5px;
            padding: 5px;
            flex-grow: 1;
            gap: 5px;

            .children-display {
                box-sizing: border-box;

                display: flex;
                justify-content: flex-start;
                flex-direction: column;
                align-items: stretch;
                flex-grow: 1;
                align-self: stretch;
                gap: 5px;

                .drag-insert-point {
                    height: 10px;
                    border-radius: 5px;
                    background-color: color.scale(colors.$light, $lightness: 50%);
                }
            }
        }

        .footer {
            box-sizing: border-box;

            display: flex;
            flex-direction: row;
            justify-content: flex-end;
            align-items: center;
            padding: 5px;
            gap: 5px;

            .create {
                @include colors.green-button();
            }
        }

    }

    &.building {
        box-sizing: border-box;
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        padding: 2px 5px;
        gap: 5px;

        border-radius: 5px;

        background-color: colors.$light;

        .section.spaced {
            gap: 10px;
        }

        .name {
            box-sizing: border-box;
            display: flex;
            flex-direction: row;
            justify-content: flex-start;
            align-items: center;
            gap: 5px;
            cursor: text;
            flex: 1 0 250px;
        }

        .recipe {
            box-sizing: border-box;
            display: flex;
            flex-direction: row;
            justify-content: flex-start;
            align-items: center;
            gap: 5px;
            min-width: 250px;

            // When there's only one recipe for this bulding.
            &.no-choice {
                cursor: default;
            }
        }

        .section {
            box-sizing: border-box;

            display: flex;
            flex-direction: row;
            justify-content: flex-start;
            align-items: center;
            gap: 5px;
        }

    }

    .Purity {
        box-sizing: border-box;
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
        gap: 5px;
        width: 90px;

        .ChooseFromList {
            flex-shrink: 1;
            min-width: 0;
            input[type="text"] {
                min-width: 0;
                flex-grow: 1;
                flex-shrink: 1;
            }
        }
    }

    .MultiPurity {
        width: 70px;
    }

    .icon.impure-node {
        color: colors.$danger;
    }
    .icon.normal-node {
        color: colors.$warning;
    }
    .icon.pure-node {
        color: colors.$success;
    }

    .StationConsumption {
        box-sizing: border-box;
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
        gap: 5px;

        width: 70px;

        .current-consumption {
            flex-grow: 1;
            flex-shrink: 1;
            min-width: 0;
        }
        span.current-consumption {
            cursor: text;
        }
    }

    .VirtualCopies {
        width: 60px;

        .value {
            text-align: right;
        }
    }

    .BuildError {
        cursor: pointer;
    }
}

.hide-empty-balances {
    .balance {
        .entry-row.neutral {
            display: none;
            &.power-entry {
                display: flex;
            }
        }
    }
}
